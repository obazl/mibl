load("@rules_cc//cc:defs.bzl", "cc_library")

load(":BUILD.bzl", "SRCS", "mkhdr_srcs")

HDRS = [
    "load_dune.h",
    "bazel_config.h",
    "mibl_config.h",
    "opam_config.h",
    "s7_config.h",
    "error_handler.h",
    "fs.h",
    "utils.h",
]

##########
cc_library(
    name  = "mibl",
    # alwayslink = True,
    # linkstatic = 1,
    srcs = SRCS + HDRS + select({
        "//bzl/host:linux": ["strlcat.c", "strlcpy.c", "strnstr.c"],
        "//conditions:default":   []
    }) + ["@uthash//:include"],
    hdrs = ["mibl.h"],
    data = [
        "//mibl:srcs",
        "//mibl/dune:srcs",
        "//mibl/meta:srcs",
        "//mibl/opam:srcs"
    ],
    # data = [
    #     "//mibl:dune.scm",
    #     "//mibl/dune:srcs",
    #     "//mibl:meta.scm",
    #     "//mibl/meta:srcs",
    #     "//mibl:opam.scm",
    #     "//mibl/opam:srcs",
    # ],
    defines = select({
        "//bzl/host:debug": ["DEBUG_TRACE"],
        "//conditions:default":   []
    }) + select({
        "//bzl/host:linux": [
            "_XOPEN_SOURCE=500", # strdup
            "_DEFAULT_SOURCE"    # dirent DT_* macros
        ],
        "//conditions:default":   []
    }),
    copts = [
        "-std=c11",
        "-g",
        "-Wall",
        "-Wpedantic",
        "-Wno-unused-function",

        "-I$(GENDIR)/src",
        "-I$(GENDIR)/external/mibl/src",

        "-Iexternal/libs7/src",

        "-Iexternal/libinih",
        "-Iexternal/logc/src",
        "-Iexternal/uthash/include",
    ],
    deps = [
        "//external/libinih:inih",
        "@logc//:logc",
        "@libs7//src:s7",
        "@libs7//vendored/linenoise",
    ],
    visibility = ["//visibility:public"]
)

################################################################
CMD_HDR = "\n".join([
    "SRC1=$(location load_dune.c)",
    "SRCDIR1=`dirname $$SRC1`;",
])

########
genrule(
    name = "mkhdrs",
    srcs = SRCS + ["ansi_colors.h"],
    outs = HDRS,
    cmd = CMD_HDR + "$(location @makeheaders//:makeheaders) "
    + mkhdr_srcs() + "; cp $${SRCDIR1}/*.h $(@D)",
    tools = ["@makeheaders//:makeheaders"],
    visibility = ["//visibility:public"]
)

########
genrule(
    name = "mkhdrs-export",
    srcs = SRCS + ["ansi_colors.h"],
    outs = ["mibl.h"],
    cmd = CMD_HDR
    + "$(location @makeheaders//:makeheaders) -H "
    + mkhdr_srcs()
    + " > $@",
    tools = ["@makeheaders//:makeheaders"],
    visibility = ["//visibility:public"]
)
