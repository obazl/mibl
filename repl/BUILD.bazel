load("@rules_cc//cc:defs.bzl", "cc_binary")

##########
cc_binary(
    name  = "repl",
    linkstatic = True,
    srcs  = [
        "repl.c", "repl.h",
        "xen_repl.c", "xen_repl.h",
        "//src:opam_config.h",
        "//src:bazel_config.h"
    ],
    defines = select({
        "//bzl/host:debug": ["DEBUG_TRACE"],
        "//conditions:default":   []
    }) + [
        # "LD_LIBRARY_PATH=external/libs7/src"
    ],
    copts = select({
        # strdup is non-standard, not supported on linux in strict c11 mode
        "//bzl/host:macos": ["-std=c11"],
        "//bzl/host:linux": ["-std=gnu11"],
        "//conditions:default": ["-std=c11"],
    }) + [
        # "-pedantic-errors",
        "-Wall",
        "-Wno-unused-function",

        "-I$(GENDIR)/src",
        "-I$(GENDIR)/external/oibl/src",

        "-I$(GENDIR)/repl",
        "-I$(GENDIR)/external/oibl/repl",

        "-Iexternal/uthash/include",
        # "-Iexternal/libinih",
        "-Iexternal/logc/src",

        "-Iexternal/libs7/src",
        "-Iexternal/oibl/libs7/src",
        "-Iexternal/libs7/vendored/linenoise",
        "-Iexternal/oibl/libs7/vendored/linenoise",
    ],
    linkopts = select({
        "//bzl/host:macos": [],
        "//bzl/host:linux": [ "-Wl,-E", "-ldl"],
        "//conditions:default": {}
    }) + [
        "-lm",
    ],
    deps = [
        "//src:oibl",
        # "//external/libinih:inih",
        "@logc//:logc",
        # "@libs7//src:s7",
        # "@libs7//vendored/linenoise",
    ],
    visibility = ["//visibility:public"]
)

########
genrule(
    name = "mkhdrs",
    srcs = [
        "repl.c",
        "xen_repl.c",
    ],
    outs = [
        "repl.h",
        "xen_repl.h",
    ],
    cmd = "\n".join([
        "SRC1=$(location repl.c)",
        "SRCDIR1=`dirname $$SRC1`",
        "$(location @makeheaders//:makeheaders) \\",
        "    $(location repl.c) \\",
        "    $(location xen_repl.c)",
        "cp $${SRCDIR1}/*.h $(@D)",
    ]),
    tools = ["@makeheaders//:makeheaders"],
    visibility = ["//visibility:public"]
)
