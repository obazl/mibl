load("@rules_cc//cc:defs.bzl", "cc_library")

test_suite(
    name = "mibl_test",
    tests = [
        "//test/dune/deps:mibl_test",
        "//test/dune/rules/shell:mibl_test",
        "//test/dune/rules/stdio:mibl_test",
        "//test/dune/rules/stdout:mibl_test"
    ]
)

CMD_FLAGS = [
    "-std=c11",
    "-pedantic-errors",
    "-Iexternal/uthash/include",
]
## macos: -UDEBUG

BOOTSTRAP_INCLUDES = [
    "-I.",
    "-Isrc",
    "-Iexternal/mibl/src",
    "-Ivendored/libs7/src",

    "-I$(GENDIR)",
    "-I$(GENDIR)/src",
]

################
exports_files(["Mibl_test.sh"])
cc_binary(
    name = "mibl_test_runner",
    srcs = ["Mibl_test.c"],
    copts = [
        "-std=c11",
        "-pedantic-errors",
        "-Wall",
        "-Werror",
        "-Iexternal/uthash/include",

        "-I$(GENDIR)/src/hdrs",

        "-Ivendored/gopt",
        "-Iexternal/mibl/vendored/gopt",

        "-Ivendored/logc",
        "-Iexternal/mibl/vendored/logc",

        "-Ivendored/unity",
        "-Iexternal/mibl/vendored/unity",

        "-Ivendored/uthash",
        "-Iexternal/mibl/vendored/uthash",

        "-Iexternal/libs7/src"  # s7.h
    ] + select({
        "//bzl/host:debug": [""],
        "//conditions:default":   []
    }) + select({
        ## macos fastbuild: -UDEBUG
        "//conditions:default":   []
    }),
    defines = select({
        "//bzl/host:debug": ["DEBUG_TRACE", "DEBUG_MIBL"],
        "//conditions:default":   []
    }) + select({
        "//bzl/host:linux": [
            "_XOPEN_SOURCE=500", # strdup
            "_DEFAULT_SOURCE"    # dirent DT_* macros
        ],
        "//conditions:default":   []
    }),
    deps = [
        "//src:mibl",
        "//vendored/gopt",
        "//vendored/logc",
        "//vendored/unity",
        "//vendored/uthash",
    ],
    # timeout = "short",
    visibility = ["//test:__subpackages__"]
)

##########
# cc_binary(
#     name  = "driver",
#     srcs  = ["driver.c",
#              "//src:bazel_config.h",
#              "@uthash//:include",
#              ],
#     data = [
#         "//scm:dune.scm",
#         "//scm/dune:srcs"
#     ],
#     # defines = select({
#     #     "//bzl/debug/trace": [], # "DEBUG_TRACE"],
#     #     "//conditions:default":   []
#     # }),
#     copts = CMD_FLAGS + BOOTSTRAP_INCLUDES + [
#     ],
#     deps = ["//src:mibl"],
# )

################################################################
# cc_test(
#     name = "demo_test",
#     srcs = ["template_unity_test.c"],
#     copts = CMD_FLAGS + BOOTSTRAP_INCLUDES + [
#         "-I$(GENDIR)/src/hdrs",

#         "-Ivendored/logc",
#         "-Iexternal/mibl/vendored/logc",

#         "-Ivendored/unity",
#         "-Iexternal/mibl/vendored/unity",

#         "-Ivendored/uthash",
#         "-Iexternal/mibl/vendored/uthash",

#         "-Iexternal/libs7/src"  # s7.h
#     ],
#     data = [
#         "//scm/dune:srcs"
#     ],
#     defines = select({
#         "//bzl/host:debug": ["DEBUG_TRACE", "DEBUG_MIBL"],
#         "//conditions:default":   []
#     }) + select({
#         "//bzl/host:linux": [
#             "_XOPEN_SOURCE=500", # strdup
#             "_DEFAULT_SOURCE"    # dirent DT_* macros
#         ],
#         "//conditions:default":   []
#     }),
#     deps = [
#         "//src:mibl",
#         "//vendored/logc",
#         "//vendored/unity",
#         "//vendored/uthash",
#     ],
# )
