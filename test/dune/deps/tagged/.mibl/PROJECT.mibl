((:@ (:name . "@")
     (:path . /Users/gar/obazl/mibl/test/s7/deps/tagged) (:exports (hash-table))
     (:opam
         (hash-table)) (:shared-ppx (hash-table)) (:filegroups (hash-table))
     (:pkgs
         (hash-table
           '"subtool" ((:ws-path . "/Users/gar/obazl/mibl/test/s7/deps/tagged") (:pkg-path . "subtool")
                        (:realpath . "/Users/gar/obazl/mibl/test/s7/deps/tagged/subtool")
                        (dune (rule (targets foo.txt) (deps (:< sub/gen.sh))
                                    (action (run %{<} %{targets}))))
                        (:mibl (:rule (:deps (::tools (:< (:pkg . "subtool/sub") (:tgt . "gen.sh"))))
                                      (:outputs (:foo.txt (:pkg . "subtool") (:tgt . "foo.txt")))
                                      (:actions (:cmd (:tool :<) (:args :outputs)))))
                        (:files (:dynamic "foo.txt")))
           '"single" ((:ws-path . "/Users/gar/obazl/mibl/test/s7/deps/tagged") (:pkg-path . "single")
                       (:realpath . "/Users/gar/obazl/mibl/test/s7/deps/tagged/single")
                       (dune (rule (targets output.txt) (deps (:< gen.sh))
                                   (action (run %{<} %{targets}))))
                       (:files (:static "gen.sh") (:dynamic "output.txt"))
                       (:mibl (:rule (:deps (::tools (:< (:pkg . "single") (:tgt . "gen.sh"))))
                                     (:outputs (:output.txt (:pkg . "single")
                                                            (:tgt . "output.txt")))
                                     (:actions (:cmd (:tool :<) (:args :outputs))))))
           '"multi" ((:ws-path . "/Users/gar/obazl/mibl/test/s7/deps/tagged") (:pkg-path . "multi")
                      (:realpath . "/Users/gar/obazl/mibl/test/s7/deps/tagged/multi")
                      (dune (rule (targets foo.txt) (deps (:< gen.sh))
                                  (action (run %{<} %{targets}))))
                      (:files (:static "gen.sh") (:dynamic "foo.txt"))
                      (:mibl (:rule (:deps (::tools (:< (:pkg . "multi") (:tgt . "gen.sh"))))
                                    (:outputs (:foo.txt (:pkg . "multi") (:tgt . "foo.txt")))
                                    (:actions (:cmd (:tool :<) (:args :outputs))))))
           '"subtool/sub" ((:ws-path . "/Users/gar/obazl/mibl/test/s7/deps/tagged") (:pkg-path . "subtool/sub")
                            (:realpath . "/Users/gar/obazl/mibl/test/s7/deps/tagged/subtool/sub")
                            (:files (:static "gen.sh")) (:exports-files "gen.sh"))
           '"./" ((:ws-path . "/Users/gar/obazl/mibl/test/s7/deps/tagged") (:pkg-path . "./")
                   (:realpath . "/Users/gar/obazl/mibl/test/s7/deps/tagged")
                   (:files (:static "WORKSPACE.bazel" "gen.sh")) (:exports-files "gen.sh"))
           '"supertool" ((:ws-path . "/Users/gar/obazl/mibl/test/s7/deps/tagged") (:pkg-path . "supertool")
                          (:realpath . "/Users/gar/obazl/mibl/test/s7/deps/tagged/supertool")
                          (dune (rule (targets foo.txt) (deps (:< ../gen.sh))
                                      (action (run %{<} %{targets}))))
                          (:mibl (:rule (:deps (::tools (:< (:pkg . "./") (:tgt . "gen.sh"))))
                                        (:outputs (:foo.txt (:pkg . "supertool")
                                                            (:tgt . "foo.txt")))
                                        (:actions (:cmd (:tool :<) (:args :outputs)))))
                          (:files (:dynamic "foo.txt")))))))