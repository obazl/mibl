((:@ (:name . "@")
     (:path . /home/gar_mobileink_com/obazl/mibl/test/dune/deps/literals/super/case01)
     (:exports
         (hash-table)) (:opam (hash-table)) (:shared-ppx (hash-table))
     (:filegroups
         (hash-table))
     (:pkgs
         (hash-table
           '"main" ((:ws-path . "/home/gar_mobileink_com/obazl/mibl/test/dune/deps/literals/super/case01") (:pkg-path . "main")
                     (:realpath . "/home/gar_mobileink_com/obazl/mibl/test/dune/deps/literals/super/case01/main")
                     (dune (rule (targets foo.txt) (deps (:< ../gen.sh))
                                 (action (run %{<} %{targets}))))
                     (:mibl (:rule (::inputs (:< (:pkg . "./") (:tgt . "gen.sh"))) (::tools :DUMMY5)
                                   (::outputs (:foo.txt (:pkg . "main") (:tgt . "foo.txt")))
                                   (:cmd (:cmd (:tool (% . <)) (:args ::outputs))))
                            (:rulex (::inputs (:< (:pkg . "./") (:tgt . "gen.sh")))
                                    (::outputs (:foo.txt (:pkg . "main") (:tgt . "foo.txt")))
                                    (::tools :DUMMY2) (:cmd (:tool (% . <)) (:args ::outputs))))
                     (:files (:dynamic "foo.txt" "foo.txt")))
           '"./" ((:ws-path . "/home/gar_mobileink_com/obazl/mibl/test/dune/deps/literals/super/case01") (:pkg-path . "./")
                   (:realpath . "/home/gar_mobileink_com/obazl/mibl/test/dune/deps/literals/super/case01")
                   (:files (:static "BUILD.test.bazel" "gen.sh")))))))