"(list (list :@ (cons :name \"@\") (cons :path '/Users/gar/obazl/mibl/test/dune/deps/literals/sibling/case01) (list :exports (hash-table)) (list :opam (hash-table)) (list :shared-ppx (hash-table)) (list :filegroups (hash-table)) (list :pkgs (hash-table \"src/gen\" (list (cons :ws-path \"/Users/gar/obazl/mibl/test/dune/deps/literals/sibling/case01\") (cons :pkg-path \"src/gen\") (cons :realpath \"/Users/gar/obazl/mibl/test/dune/deps/literals/sibling/case01/src/gen\") (list :files (list :static \"gen.sh\"))) \"src\" (list (cons :ws-path \"/Users/gar/obazl/mibl/test/dune/deps/literals/sibling/case01\") (cons :pkg-path \"src\") (cons :realpath \"/Users/gar/obazl/mibl/test/dune/deps/literals/sibling/case01/src\") (list :files (list :static \"args.dat\") (list :dynamic \"foo.txt\")) (list 'dune (list 'rule (list 'targets 'foo.txt) (list 'deps (list :< 'gen/gen.sh) (list :args 'args.dat) (list :data '../data/foo.dat)) (list 'action (list 'run '%{<} '%{args} '%{data} '%{targets})))) (list :mibl (list :rule (list ::inputs (list ::toolsC (cons (symbol \":(% . <):()\") ::unresolved)) (list :< (cons :pkg \"src/gen\") (cons :tgt \"gen.sh\")) (list :args (cons :pkg \"src\") (cons :tgt \"args.dat\")) (list :data (cons :pkg \"data\") (cons :tgt \"foo.dat\"))) (list ::tools '{gensym}-6) (list ::outputs (list :foo.txt (cons :pkg \"src\") (cons :tgt \"foo.txt\"))) (list :cmd (list :tool (symbol \":(% . <):()\")) (list :args :args :data ::outputs)) (list :cmdx (list :cmd (list :tool (cons '% '<)) (list :args (cons '% 'args) (cons '% 'data) ::outputs)))))) \"data\" (list (cons :ws-path \"/Users/gar/obazl/mibl/test/dune/deps/literals/sibling/case01\") (cons :pkg-path \"data\") (cons :realpath \"/Users/gar/obazl/mibl/test/dune/deps/literals/sibling/case01/data\") (list :files (list :static \"foo.dat\"))) \"./\" (list (cons :ws-path \"/Users/gar/obazl/mibl/test/dune/deps/literals/sibling/case01\") (cons :pkg-path \"./\") (cons :realpath \"/Users/gar/obazl/mibl/test/dune/deps/literals/sibling/case01\"))))))"