"(list (list :@ (cons :name \"@\") (cons :path '/Users/gar/obazl/mibl/test/s7/deps/glob) (list :exports (hash-table)) (list :opam (hash-table)) (list :shared-ppx (hash-table)) (list :filegroups (hash-table \"mixed/css\" (list (list \"glob_STAR.css\" (cons :glob \"*.css\") (list :clients \"mixed/super\"))) \"cwd\" (list (list \"glob_STAR.css\" (cons :glob \"*.css\") (list :clients \"cwd\"))) \"css\" (list (list \"glob_STAR.css\" (cons :glob \"*.css\") (list :clients \"super\"))) \"mixed/sub/html\" (list (list \"glob_STAR.html\" (cons :glob \"*.html\") (list :clients \"mixed/sub\"))) \"mixed/sub/css\" (list (list \"glob_STAR.css\" (cons :glob \"*.css\") (list :clients \"mixed/sub\"))) \"mixed/cwd\" (list (list \"glob_STAR.html\" (cons :glob \"*.html\") (list :clients \"mixed/cwd\")) (list \"glob_STAR.css\" (cons :glob \"*.css\") (list :clients \"mixed/cwd\"))) \"sub/css\" (list (list \"glob_STAR.css\" (cons :glob \"*.css\") (list :clients \"sub\"))) \"mixed/html\" (list (list \"glob_STAR.html\" (cons :glob \"*.html\") (list :clients \"mixed/super\"))) \"../runtime\" (list (list \"glob_STAR.js\" (cons :glob \"*.js\") (list :clients \"genjs\"))))) (list :pkgs (hash-table \"mixed/css\" (list (list :ws-path \"/Users/gar/obazl/mibl/test/s7/deps/glob\") (list :pkg-path \"mixed/css\") (list :realpath \"/Users/gar/obazl/mibl/test/s7/deps/glob/mixed/css\") (list :files (list :static \"test.css\")) (list :filegroups (list \"glob_STAR.css\" (cons :glob \"*.css\") (list :clients \"mixed/super\")))) \"css\" (list (list :ws-path \"/Users/gar/obazl/mibl/test/s7/deps/glob\") (list :pkg-path \"css\") (list :realpath \"/Users/gar/obazl/mibl/test/s7/deps/glob/css\") (list :files (list :static \"a.css\" \"b.css\")) (list :filegroups (list \"glob_STAR.css\" (cons :glob \"*.css\") (list :clients \"super\")))) \"cwd\" (list (list :ws-path \"/Users/gar/obazl/mibl/test/s7/deps/glob\") (list :pkg-path \"cwd\") (list :realpath \"/Users/gar/obazl/mibl/test/s7/deps/glob/cwd\") (list :files (list :static \"a.css\" \"b.css\" \"concat.sh\") (list :dynamic \"foo.css\")) (list 'dune (list 'rule (list 'targets 'foo.css) (list 'deps 'concat.sh (list :css (list 'glob_files '*.css))) (list 'action (list 'run 'concat.sh '%{css} '%{targets})))) (list :mibl (list :rule (list :deps (list ::tools (list :concat.sh (cons :pkg \"cwd\") (cons :tgt \"concat.sh\"))) (list :css (cons :pkg \"cwd\") (cons :glob \"glob_STAR.css\"))) (list :outputs (list :foo.css (cons :pkg \"cwd\") (cons :tgt \"foo.css\"))) (list :actions (list :cmd (list :tool :concat.sh) (list :args :css :outputs))))) (list :filegroups (list \"glob_STAR.css\" (cons :glob \"*.css\") (list :clients \"cwd\")))) \"genjs\" (list (list :ws-path \"/Users/gar/obazl/mibl/test/s7/deps/glob\") (list :pkg-path \"genjs\") (list :realpath \"/Users/gar/obazl/mibl/test/s7/deps/glob/genjs\") (list 'dune (list 'rule (list 'target 'files.ml) (list 'deps 'gen/gen.exe (list 'glob_files '../../runtime/*.js)) (list 'action (list 'with-stdout-to '%{target} (list 'run '%{deps}))))) (list :mibl (list :rule (list :deps (list :gen/gen.exe (cons :pkg \"genjs/gen\") (cons :tgt \"gen.exe\")) (list ::glob (cons :pkg \"../runtime\") (cons :glob \"glob_STAR.js\"))) (list :outputs (list :files.ml (cons :pkg \"genjs\") (cons :tgt \"files.ml\"))) (list :actions (list :cmd (list :tool :gen/gen.exe) (list :args ::glob)) (list :stdout :%{target})))) (list :structures (list :dynamic (cons 'Files 'files.ml)))) \"mixed\" (list (list :ws-path \"/Users/gar/obazl/mibl/test/s7/deps/glob\") (list :pkg-path \"mixed\") (list :realpath \"/Users/gar/obazl/mibl/test/s7/deps/glob/mixed\")) \"./\" (list (list :ws-path \"/Users/gar/obazl/mibl/test/s7/deps/glob\") (list :pkg-path \"./\") (list :realpath \"/Users/gar/obazl/mibl/test/s7/deps/glob\")) \"mixed/sub/html\" (list (list :ws-path \"/Users/gar/obazl/mibl/test/s7/deps/glob\") (list :pkg-path \"mixed/sub/html\") (list :realpath \"/Users/gar/obazl/mibl/test/s7/deps/glob/mixed/sub/html\") (list :files (list :static \"index.html\" \"main.html\")) (list :filegroups (list \"glob_STAR.html\" (cons :glob \"*.html\") (list :clients \"mixed/sub\")))) \"mixed/sub/css\" (list (list :ws-path \"/Users/gar/obazl/mibl/test/s7/deps/glob\") (list :pkg-path \"mixed/sub/css\") (list :realpath \"/Users/gar/obazl/mibl/test/s7/deps/glob/mixed/sub/css\") (list :files (list :static \"foo.css\" \"style.css\")) (list :filegroups (list \"glob_STAR.css\" (cons :glob \"*.css\") (list :clients \"mixed/sub\")))) \"mixed/sub\" (list (list :ws-path \"/Users/gar/obazl/mibl/test/s7/deps/glob\") (list :pkg-path \"mixed/sub\") (list :realpath \"/Users/gar/obazl/mibl/test/s7/deps/glob/mixed/sub\") (list :files (list :static \"concat.sh\")) (list 'dune (list 'rule (list 'targets 'foo.ml) (list 'deps 'concat.sh (list :html (list 'glob_files 'html/*.html)) (list :css (list 'glob_files 'css/*.css))) (list 'action (list 'run 'concat.sh '%{html} '%{css} '%{targets})))) (list :mibl (list :rule (list :deps (list ::tools (list :concat.sh (cons :pkg \"mixed/sub\") (cons :tgt \"concat.sh\"))) (list :html (cons :pkg \"mixed/sub/html\") (cons :glob \"glob_STAR.html\")) (list :css (cons :pkg \"mixed/sub/css\") (cons :glob \"glob_STAR.css\"))) (list :outputs (list :foo.ml (cons :pkg \"mixed/sub\") (cons :tgt \"foo.ml\"))) (list :actions (list :cmd (list :tool :concat.sh) (list :args :html :css :outputs))))) (list :structures (list :dynamic (cons 'Foo 'foo.ml)))) \"mixed/cwd\" (list (list :ws-path \"/Users/gar/obazl/mibl/test/s7/deps/glob\") (list :pkg-path \"mixed/cwd\") (list :realpath \"/Users/gar/obazl/mibl/test/s7/deps/glob/mixed/cwd\") (list :files (list :static \"concat.sh\" \"cwd.css\" \"cwd.html\") (list :dynamic \"output.txt\")) (list 'dune (list 'rule (list 'targets 'output.txt) (list 'deps 'concat.sh (list :html (list 'glob_files '*.html)) (list :css (list 'glob_files '*.css))) (list 'action (list 'run 'concat.sh '%{html} '%{css} '%{targets})))) (list :mibl (list :rule (list :deps (list ::tools (list :concat.sh (cons :pkg \"mixed/cwd\") (cons :tgt \"concat.sh\"))) (list :html (cons :pkg \"mixed/cwd\") (cons :glob \"glob_STAR.html\")) (list :css (cons :pkg \"mixed/cwd\") (cons :glob \"glob_STAR.css\"))) (list :outputs (list :output.txt (cons :pkg \"mixed/cwd\") (cons :tgt \"output.txt\"))) (list :actions (list :cmd (list :tool :concat.sh) (list :args :html :css :outputs))))) (list :filegroups (list \"glob_STAR.html\" (cons :glob \"*.html\") (list :clients \"mixed/cwd\")) (list \"glob_STAR.css\" (cons :glob \"*.css\") (list :clients \"mixed/cwd\")))) \"super\" (list (list :ws-path \"/Users/gar/obazl/mibl/test/s7/deps/glob\") (list :pkg-path \"super\") (list :realpath \"/Users/gar/obazl/mibl/test/s7/deps/glob/super\") (list :files (list :static \"concat.sh\") (list :dynamic \"output.css\")) (list 'dune (list 'rule (list 'targets 'output.css) (list 'deps (list :< 'concat.sh) (list :css (list 'glob_files '../css/*.css))) (list 'action (list 'run '%{<} '%{css} '%{targets})))) (list :mibl (list :rule (list :deps (list ::tools (list :< (cons :pkg \"super\") (cons :tgt \"concat.sh\"))) (list :css (cons :pkg \"css\") (cons :glob \"glob_STAR.css\"))) (list :outputs (list :output.css (cons :pkg \"super\") (cons :tgt \"output.css\"))) (list :actions (list :cmd (list :tool :<) (list :args :css :outputs)))))) \"sub/css\" (list (list :ws-path \"/Users/gar/obazl/mibl/test/s7/deps/glob\") (list :pkg-path \"sub/css\") (list :realpath \"/Users/gar/obazl/mibl/test/s7/deps/glob/sub/css\") (list :files (list :static \"main.css\")) (list :filegroups (list \"glob_STAR.css\" (cons :glob \"*.css\") (list :clients \"sub\")))) \"sub\" (list (list :ws-path \"/Users/gar/obazl/mibl/test/s7/deps/glob\") (list :pkg-path \"sub\") (list :realpath \"/Users/gar/obazl/mibl/test/s7/deps/glob/sub\") (list :files (list :static \"concat.sh\")) (list 'dune (list 'rule (list 'targets 'foo.ml) (list 'deps (list :< 'concat.sh) (list :css (list 'glob_files 'css/*.css))) (list 'action (list 'run '%{<} '%{css} '%{targets})))) (list :mibl (list :rule (list :deps (list ::tools (list :< (cons :pkg \"sub\") (cons :tgt \"concat.sh\"))) (list :css (cons :pkg \"sub/css\") (cons :glob \"glob_STAR.css\"))) (list :outputs (list :foo.ml (cons :pkg \"sub\") (cons :tgt \"foo.ml\"))) (list :actions (list :cmd (list :tool :<) (list :args :css :outputs))))) (list :structures (list :dynamic (cons 'Foo 'foo.ml)))) \"genjs/gen\" (list (list :ws-path \"/Users/gar/obazl/mibl/test/s7/deps/glob\") (list :pkg-path \"genjs/gen\") (list :realpath \"/Users/gar/obazl/mibl/test/s7/deps/glob/genjs/gen\") (list 'dune (list 'executable (list 'name 'gen) (list 'libraries 'js_of_ocaml-compiler))) (list :structures (list :static (list 'Gen 'gen.ml))) (list :mibl (list :executable (cons :privname 'gen) (cons :main 'Gen) (list 'name 'gen) (list 'libraries 'js_of_ocaml-compiler) (list 'modules :standard) (list :deps (list :resolved '@js_of_ocaml-compiler//lib/js_of_ocaml-compiler))))) \"mixed/html\" (list (list :ws-path \"/Users/gar/obazl/mibl/test/s7/deps/glob\") (list :pkg-path \"mixed/html\") (list :realpath \"/Users/gar/obazl/mibl/test/s7/deps/glob/mixed/html\") (list :files (list :static \"test.html\")) (list :filegroups (list \"glob_STAR.html\" (cons :glob \"*.html\") (list :clients \"mixed/super\")))) \"../runtime\" (list (list :ws-path '/Users/gar/obazl/mibl/test/s7/deps/glob) (list :pkg-path \"../runtime\") (list :realpath \"/Users/gar/obazl/mibl/test/s7/deps/runtime\") (list :filegroups (list \"glob_STAR.js\" (cons :glob \"*.js\") (list :clients \"genjs\")))) \"mixed/super\" (list (list :ws-path \"/Users/gar/obazl/mibl/test/s7/deps/glob\") (list :pkg-path \"mixed/super\") (list :realpath \"/Users/gar/obazl/mibl/test/s7/deps/glob/mixed/super\") (list :files (list :static \"concat.sh\")) (list 'dune (list 'rule (list 'targets 'foo.ml) (list 'deps 'concat.sh (list :html (list 'glob_files '../html/*.html)) (list :css (list 'glob_files '../css/*.css))) (list 'action (list 'run 'concat.sh '%{html} '%{css} '%{targets})))) (list :mibl (list :rule (list :deps (list ::tools (list :concat.sh (cons :pkg \"mixed/super\") (cons :tgt \"concat.sh\"))) (list :html (cons :pkg \"mixed/html\") (cons :glob \"glob_STAR.html\")) (list :css (cons :pkg \"mixed/css\") (cons :glob \"glob_STAR.css\"))) (list :outputs (list :foo.ml (cons :pkg \"mixed/super\") (cons :tgt \"foo.ml\"))) (list :actions (list :cmd (list :tool :concat.sh) (list :args :html :css :outputs))))) (list :structures (list :dynamic (cons 'Foo 'foo.ml))))))))"