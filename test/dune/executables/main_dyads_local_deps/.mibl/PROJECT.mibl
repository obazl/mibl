((:@ (:name . "@")
     (:path . /Users/gar/obazl/mibl/test/dune/executables/main_dyads_local_deps)
     (:exports
         (hash-table
           ':main1 ((:bin . #t) (:pkg . ./) (:tgt . main1.exe))
           'main1.exe ((:bin . #t) (:pkg . ./) (:tgt . main1.exe))
           ':bin:main1 ((:bin . #t) (:pkg . ./) (:tgt . main1.exe))
           'main1.bc ((:bin . #t) (:pkg . ./) (:tgt . main1.exe))
           ':main1.bc ((:bin . #t) (:pkg . ./) (:tgt . main1.exe))
           ':bin:main1.bc ((:bin . #t) (:pkg . ./) (:tgt . main1.exe))
           ':main1.exe ((:bin . #t) (:pkg . ./) (:tgt . main1.exe))
           ':bin:main1.exe ((:bin . #t) (:pkg . ./) (:tgt . main1.exe))
           'main1 ((:bin . #t) (:pkg . ./) (:tgt . main1.exe))
           'main2.exe ((:bin . #t) (:pkg . ./) (:tgt . main2.exe))
           'main2 ((:bin . #t) (:pkg . ./) (:tgt . main2.exe))
           ':main2 ((:bin . #t) (:pkg . ./) (:tgt . main2.exe))
           ':bin:main2 ((:bin . #t) (:pkg . ./) (:tgt . main2.exe))
           'main2.bc ((:bin . #t) (:pkg . ./) (:tgt . main2.exe))
           ':bin:main2.bc ((:bin . #t) (:pkg . ./) (:tgt . main2.exe))
           ':main2.bc ((:bin . #t) (:pkg . ./) (:tgt . main2.exe))
           ':main2.exe ((:bin . #t) (:pkg . ./) (:tgt . main2.exe))
           ':bin:main2.exe ((:bin . #t) (:pkg . ./) (:tgt . main2.exe))))
     (:opam
         (hash-table
           '(symbol "#f") ((:path . :path) (:bin (main1 ("./" . "main1.exe"))
                                                 (main2 ("./" . "main2.exe"))))))
     (:shared-ppx
         (hash-table)) (:filegroups (hash-table))
     (:pkgs
         (hash-table
           '"./" ((:ws-path . "/Users/gar/obazl/mibl/test/dune/executables/main_dyads_local_deps") (:pkg-path . "./")
                   (:realpath . "/Users/gar/obazl/mibl/test/dune/executables/main_dyads_local_deps")
                   (:structures (:static (A a.ml)))
                   (dune (executables (names main1 main2) (public_names main1 main2)
                                      (flags (:standard -open Foo -open Bar -linkall))
                                      (link_flags -link_flag_a) (libraries Foo Bar)
                                      (ocamlc_flags -compile_flag_vm)
                                      (ocamlopt_flags -compile_flag_opt)))
                   (:modules (Main1 (:ml main1.ml) (:mli main1.mli))
                             (Main2 (:ml main2.ml) (:mli main2.mli)))
                   (:mibl (:executable (:pubname . main1) (:privname . main1) (:main . Main1)
                                       (:opts (:standard) (:opens Foo Bar) (:flags -linkall))
                                       (:ocamlc-opts (:flags -compile_flag_vm))
                                       (:ocamlopt-opts (:flags -compile_flag_opt)) (:prologue . 1)
                                       (:link-opts (:flags -link_flag_a))
                                       (:deps (:resolved @Foo//lib/Foo @Bar//lib/Bar)))
                          (:executable (:pubname . main2) (:privname . main2) (:main . Main2)
                                       (:opts (:standard) (:opens Foo Bar) (:flags -linkall))
                                       (:ocamlc-opts (:flags -compile_flag_vm))
                                       (:ocamlopt-opts (:flags -compile_flag_opt)) (:prologue . 1)
                                       (:link-opts (:flags -link_flag_a))
                                       (:deps (:resolved @Foo//lib/Foo @Bar//lib/Bar)))
                          (:prologue (1 (:modules A)
                                        (:opts (:standard) (:opens Foo Bar) (:flags -linkall))))))))))